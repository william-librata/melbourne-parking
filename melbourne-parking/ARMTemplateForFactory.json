{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "melbourne-parking"
		},
		"ParkingDataLake_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ParkingDataLake'"
		},
		"ParkingDataLakeLog_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ParkingDataLakeLog'"
		},
		"ParkingDataJSON_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://data.melbourne.vic.gov.au/resource/vh2v-4nfs.json"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ParkingDataPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Ingest To Data Lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": true
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "ParkingDataLakeLog",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['bay_id']"
										},
										"sink": {
											"path": "$['bay_id']"
										}
									},
									{
										"source": {
											"path": "$['st_marker_id']"
										},
										"sink": {
											"path": "$['st_marker_id']"
										}
									},
									{
										"source": {
											"path": "$['status']"
										},
										"sink": {
											"path": "$['status']"
										}
									},
									{
										"source": {
											"path": "$['location']['latitude']"
										},
										"sink": {
											"path": "$['location']['latitude']"
										}
									},
									{
										"source": {
											"path": "$['location']['longitude']"
										},
										"sink": {
											"path": "$['location']['longitude']"
										}
									},
									{
										"source": {
											"path": "$['location']['human_address']"
										},
										"sink": {
											"path": "$['location']['human_address']"
										}
									},
									{
										"source": {
											"path": "$['lat']"
										},
										"sink": {
											"path": "$['lat']"
										}
									},
									{
										"source": {
											"path": "$['lon']"
										},
										"sink": {
											"path": "$['lon']"
										}
									},
									{
										"source": {
											"path": "$[':@computed_region_evbi_jbp8']"
										},
										"sink": {
											"path": "$[':@computed_region_evbi_jbp8']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ParkingDataSource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ParkingDataDestination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ParkingDataSource')]",
				"[concat(variables('factoryId'), '/datasets/ParkingDataDestination')]",
				"[concat(variables('factoryId'), '/linkedServices/ParkingDataLakeLog')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParkingDataDestination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ParkingDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@concat(convertFromUtc(utcnow(), 'AUS Eastern Standard Time', 'yyyy-MM-ddTHH-mm-ss'), '-Melbourne-Parking-Data.JSON')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat(convertFromUtc(utcnow(), 'AUS Eastern Standard Time', 'yyyy'), '/', convertFromUtc(utcnow(), 'AUS Eastern Standard Time', 'MM'), '/', convertFromUtc(utcnow(), 'AUS Eastern Standard Time', 'dd'))",
							"type": "Expression"
						},
						"container": "melbourne-parking"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ParkingDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParkingDataSource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ParkingDataJSON",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"bay_id": {
							"type": "string"
						},
						"st_marker_id": {
							"type": "string"
						},
						"status": {
							"type": "string"
						},
						"location": {
							"type": "object",
							"properties": {
								"latitude": {
									"type": "string"
								},
								"longitude": {
									"type": "string"
								},
								"human_address": {
									"type": "string"
								}
							}
						},
						"lat": {
							"type": "string"
						},
						"lon": {
							"type": "string"
						},
						":@computed_region_evbi_jbp8": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ParkingDataJSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParkingDataJSON')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Melbourne Parking Data - JSON",
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ParkingDataJSON_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParkingDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Melbourne Parking Data Lake",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ParkingDataLake_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParkingDataLakeLog')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ParkingDataLakeLog_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Every 10 Minutes')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ParkingDataPipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 10,
						"startTime": "2021-01-06T12:06:00",
						"endTime": "2021-05-09T00:00:00",
						"timeZone": "AUS Eastern Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ParkingDataPipeline')]"
			]
		}
	]
}